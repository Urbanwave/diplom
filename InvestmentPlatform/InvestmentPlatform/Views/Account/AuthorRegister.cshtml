@model InvestmentPlatform.Models.AuthorRegisterViewModel
@{
    ViewBag.Title = "AuthorRegister";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="header-page">AUTHOR SIGN UP</h2>
<div class="header-separator"></div>
<br />
<br />
<br />

@using (Html.BeginForm("RegisterAuthor", "Account", FormMethod.Post, new { @class = "form-horizontal registration-form", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="registration-form-inputs">
        @Html.ValidationSummary("", new { @class = "text-danger" })

        <div class="form-group registration-form-required-field">
            <div class="col-md-10">
                <label>
                    *Required
                </label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.FirstName, new { @class = "col-md-3 control-label" })
            <div class="col-md-7">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.LastName, new { @class = "col-md-3 control-label" })
            <div class="col-md-7">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-3 control-label" })
            <div class="col-md-7">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-3 control-label" })
            <div class="col-md-7">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label" })
            <div class="col-md-7">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.JobTitle, new { @class = "col-md-3 control-label" })
            <div class="col-md-7">
                @Html.TextBoxFor(m => m.JobTitle, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Website, new { @class = "col-md-3 control-label" })
            <div class="col-md-7">
                @Html.TextBoxFor(m => m.Website, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 control-label">*Country:</label>
            <div class="col-md-7">
                <select id="country" class="form-control">
                    <option value="" disabled selected>Select Country</option>
                </select>
            </div>  
        </div>

        <div class="form-group">
            <label class="col-md-3 control-label">*City:</label>
            <div class="col-md-7">
                <select id="city" class="form-control" disabled>
                    <option value="" disabled selected>Select City</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-3 control-label" for="file">*Company logo:</label>        
            <div class="col-md-7">
                <input type="file" name="file" id="file" style="width: 100%; margin-top: 6px;" />          
            </div>
        </div>

        <div class="form-group">
            <div class="registration-button-block">
                <input type="submit" value="SIGN UP" />
            </div>
        </div>
    </div>
    @Html.HiddenFor(t => t.CityId)
}

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $.getJSON('/location/GetCountries', null, function (data) {
                $.each(data, function () {
                    $('#country').append('<option value=' +
                        this.Id + '>' + this.Name + '</option>');
                });              
                $.getJSON('/location/GetCities', { countryId: $('#country').val() }, function (data) {
                    if (data.length > 0) {
                        $('#city').prop("disabled", false);   

                        $.each(data, function () {
                            $('#city').append('<option value=' +
                                this.Id + '>' + this.Name + '</option>');
                        });
                    }
                });
            });

            $('#country').change(function () {
                $('#city option').remove();
                $('#city').append('<option value="" disabled selected>Select City</option>');
                $.getJSON('/location/GetCities', { countryId: $('#country').val() }, function (data) {
                    if (data.length > 0) {
                        $('#city').prop("disabled", false);

                        $.each(data, function () {
                            $('#city').append('<option value=' +
                                this.Id + '>' + this.Name + '</option>');
                        });
                    }
                });
            });

            $('#city').change(function () {
                $('#CityId').val($('#city').val());
            });
        });
    </script>
}